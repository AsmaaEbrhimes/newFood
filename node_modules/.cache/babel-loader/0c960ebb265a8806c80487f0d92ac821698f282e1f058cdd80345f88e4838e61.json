{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pompo\\\\OneDrive\\\\Desktop\\\\MenueFood\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from './Components/Navbar';\nimport Header from './Components/Header';\nimport { Container } from 'react-bootstrap';\nimport Catogery from './Components/catogery';\nimport Listitem from './Components/Listitem';\nimport data from './Components/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [Data, setData] = useState(data);\n  const allcategores = [\"الكل\", ...new Set(data.map(cat => cat.catogery))];\n  const filtercatogery = selectedCat => {\n    if (selectedCat === 'الكل') {\n      setData(data);\n    } else {\n      const filterfood = data.filter(item => item.catogery === selectedCat);\n      setData(filterfood);\n    }\n  };\n  const filterBySearch = word => {\n    if (word !== '') {\n      const filterfood = data.filter(item => item.title === word);\n      setData(filterfood);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        filterBySearch: filterBySearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Catogery, {\n        filtercatogery: filtercatogery,\n        allcategores: allcategores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {\n        Data: Data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"jbCoK80Yy21V/gTL0UiABT1lpas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","Header","Container","Catogery","Listitem","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","Data","setData","allcategores","Set","map","cat","catogery","filtercatogery","selectedCat","filterfood","filter","item","filterBySearch","word","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pompo/OneDrive/Desktop/MenueFood/myapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NavBar from './Components/Navbar'\nimport Header from './Components/Header';\nimport { Container } from 'react-bootstrap';\nimport Catogery from './Components/catogery'\nimport Listitem from './Components/Listitem'\nimport data from './Components/dataApi'\n\nconst App = () => {\n    const [Data, setData] = useState(data)\n    const allcategores=[\"الكل\", ...new Set(data.map((cat)=>cat.catogery))]\n\n    const filtercatogery = (selectedCat) => {\n        if (selectedCat === 'الكل') {\n            setData(data);\n        } else {\n            const filterfood = data.filter((item) => item.catogery === selectedCat);\n            setData(filterfood);\n        }\n    }\n\n    const filterBySearch = (word) => {\n        if (word !== '') {\n            const filterfood = data.filter((item) => item.title === word);\n            setData(filterfood);\n        }\n    }\n\n    \n\n    return (\n        <>\n            <NavBar />\n            <Container>\n                <Header filterBySearch={filterBySearch} />\n                <Catogery filtercatogery={filtercatogery} allcategores={allcategores}/>\n                <Listitem Data={Data} />\n            </Container>\n        </>\n\n    )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACM,IAAI,CAAC;EACtC,MAAMS,YAAY,GAAC,CAAC,MAAM,EAAE,GAAG,IAAIC,GAAG,CAACV,IAAI,CAACW,GAAG,CAAEC,GAAG,IAAGA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;EAEtE,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACpC,IAAIA,WAAW,KAAK,MAAM,EAAE;MACxBP,OAAO,CAACR,IAAI,CAAC;IACjB,CAAC,MAAM;MACH,MAAMgB,UAAU,GAAGhB,IAAI,CAACiB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,QAAQ,KAAKE,WAAW,CAAC;MACvEP,OAAO,CAACQ,UAAU,CAAC;IACvB;EACJ,CAAC;EAED,MAAMG,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAIA,IAAI,KAAK,EAAE,EAAE;MACb,MAAMJ,UAAU,GAAGhB,IAAI,CAACiB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,KAAKD,IAAI,CAAC;MAC7DZ,OAAO,CAACQ,UAAU,CAAC;IACvB;EACJ,CAAC;EAID,oBACId,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACP,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACL,SAAS;MAAAyB,QAAA,gBACNpB,OAAA,CAACN,MAAM;QAACuB,cAAc,EAAEA;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CxB,OAAA,CAACJ,QAAQ;QAACgB,cAAc,EAAEA,cAAe;QAACL,YAAY,EAAEA;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvExB,OAAA,CAACH,QAAQ;QAACQ,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA,eACd,CAAC;AAIX,CAAC;AAAApB,EAAA,CAlCKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}